#This creates a new column for year
SF$year <- year(SF$call_date2)
#descending order
SF1 <- SF %>%
arrange(desc(report_date))
#head(SF1)
Years <- SF %>%
count(year) %>%
group_by(year) %>%
arrange(desc(year))
head(Years)
ggplot(data=Years) +
geom_col(mapping=aes(x=year, y=n))
ggplot(data=Years) +
geom_col(mapping=aes(x=year, y=n, fill=n))
ggplot(Years,aes(x = year, y = n,
fill = n)) +
geom_col(position = "dodge") +
theme(legend.position = "none")
ggplot(Years,aes(x = year, y = n,
fill = n)) +
geom_col(position = "dodge") +
theme(legend.position = "none") +
#This is your title sequence
labs(title = "311 Calls for Service By Day, San Francisco",
subtitle = "SF PD Service Call Data, 2016-2019",
caption = "Graphic by Rob Wells, 2-12-2022",
y="Number of Calls",
x="Year")
#Copy section of code from above...
ggplot(Years,aes(x = year, y = n,
fill = n)) +
geom_col(position = "dodge") +
theme(legend.position = "none") +
labs(title = "311 Calls for Service By Day, San Francisco",
subtitle = "SF PD Service Call Data, 2016-2019",
caption = "Graphic by Rob Wells, 2-12-2022",
y="Number of Calls",
x="Year")
#Sandwich it onto a simple ggplot that you created in the prior code chunk
Calldates <- SF %>%
count(call_date) %>%
group_by(call_date) %>%
arrange(desc(n))
head(Calldates)
top_6 <- Calldates %>%
filter(n >= 215)
head(top_6)
ggplot(data=top_6) +
geom_col(mapping = aes(x=call_date, y=n))
ggplot(data=top_6)+
geom_col(mapping = aes(x=call_date, y=n, fill=n))
ggplot(top_6, aes(x=call_date, y=n, fill=n)) +
geom_col(position = "dodge") +
theme(legend.position = "none")
ggplot(top_6, aes(x=call_date, y=n, fill = n)) +
geom_col(position = "dodge") +
theme(legend.position = "none") +
labs(title = "Top 6 Days with most 311 Calls for Service",
subtitle = "SF PD Service Call Data, 2016-2019",
caption = "Graphics by Nini Mtchedlishvili",
y = "Number of Calls",
x = "Call Dates")
summary(Calldates)
#Adding the $n allows us to calculate the data on a specific column
Days <- SF %>%
count(call_date2) %>%
arrange(desc(n))
summary(Days$n)
#Group_by gathers and allows tabulation of all days
Days %>%
group_by(call_date2) %>%
filter(n == max(n))
Days %>%
# group_by(call_date2) %>%
filter(n == max(n))
write.csv(Days,"Days.csv")
Days %>%
filter(n >= 215)
Days %>%
filter(n <= 29)
SF1 <- SF %>% count(original_crime_type_name) %>%
arrange(desc(n))
head(SF1)
Action <- SF %>%
count(disposition) %>%
arrange(desc(n))
head(Action)
Types <- SF %>% count(original_crime_type_name) %>%
slice_max(n, n=5)
Types
SF <- SF %>%
mutate(weekday = wday(call_date2, label=TRUE, abbr=FALSE))
SF %>%
select(weekday, crime_id, disposition) %>%
filter(grepl("ARR", disposition)) %>%
count(weekday)
#grepl, your find function: searches for matches of a string, returns true or false. "grep logical"
#using the code above
SF %>%
select(weekday, crime_id, disposition) %>%
filter(grepl("ARR", disposition)) %>%
count(weekday) %>%
#and sandwich onto a graphic
ggplot(aes(x = weekday, y = n)) +
geom_point(aes(size = n, color = n))
#using the code above
SF %>%
select(weekday, crime_id, disposition) %>%
filter(grepl("ARR", disposition)) %>%
count(weekday) %>%
#and sandwiching onto a graphic
ggplot(aes(x = weekday, y = n)) +
ylab("Arrests") +
geom_point(aes(size = n, color = n), alpha = 0.7, show.legend = FALSE) +
labs(title = "Homeless Arrests By Weekday in San Francisco",
subtitle = "SF PD Service Call Data 2017-2019: Source: SFPD",
caption = "Graphic by Nini Mtchedlishvili")
#using the code above
bubble <- SF %>%
select(weekday, crime_id, disposition) %>%
filter(grepl("ARR", disposition)) %>%
count(weekday) %>%
#and sandwiching onto a graphic
ggplot(aes(x = weekday, y = n)) +
ylab("Arrests") +
xlab("") +
geom_point(aes(size = n, color = n), alpha = 0.7, show.legend = FALSE) +
scale_size_area(guide = "none", max_size = 25) +
scale_y_continuous(limits=c(0, 100)) +
labs(title = "Homeless Arrests By Weekday in San Francisco",
subtitle = "SF PD Service Call Data 2017-2019: Source: SFPD",
caption = "Graphic by Nini Mtchedlishvili, 9/14/2024")
bubble
ggsave("bubble.png",device = "png",width=9,height=6, dpi=800)
ppp_maryland <- read_csv("../CompText_Jour/03_tutorials/qmd_files/assets/data/ppp_loans_md.csv.zip")
ppp_maryland <- read_csv("/Users/ninimtchedlishvili/CompText_Jour-main/03_tutorials/qmd_files/assets/data/ppp_loans_md.csv.zip")
maryland_ppp_top_counties <- ppp_maryland %>%
group_by(project_county_name) %>%
summarise(
total_loans = n()
) %>%
arrange(desc(total_loans)) %>%
head(10)
maryland_ppp_top_counties
View(ppp_maryland)
View(maryland_ppp_top_counties)
maryland_ppp_top_counties <- ppp_maryland %>%
group_by(project_county_name) %>%
summarise(
total_loans = n()
) %>%
arrange(desc(total_loans)) %>%
head(10)
maryland_ppp_top_counties
maryland_ppp_top_counties %>%
ggplot(aes(x=project_county_name, y=total_loans)) +
geom_bar(aes(x=project_county_name, weight=total_loans))
maryland_ppp_top_counties %>%
ggplot() +
geom_bar(aes(x=project_county_name, weight=total_loans))
maryland_ppp_top_counties %>%
ggplot() +
geom_bar(aes(x=reorder(project_county_name,total_loans), weight=total_loans))
maryland_ppp_top_counties %>%
ggplot() +
geom_bar(aes(x=reorder(project_county_name,total_loans), weight=total_loans)) +
coord_flip()
maryland_ppp_top_counties %>%
ggplot() +
geom_bar(aes(x=reorder(project_county_name,total_loans), weight=total_loans)) +
coord_flip() +
theme_minimal()
#install.packages('ggthemes')
library(ggthemes)
maryland_ppp_top_counties %>%
ggplot() +
geom_bar(aes(x=reorder(project_county_name,total_loans), weight=total_loans)) +
coord_flip() +
theme_economist()
ppp_maryland_loans_by_date <- ppp_maryland %>%
group_by(date_approved) %>%
summarise(
total_loans=n()
)
ppp_maryland_loans_by_date
ppp_maryland_loans_by_date %>%
ggplot() +
geom_line(aes(x=date_approved, y=total_loans))
ppp_maryland_loans_by_date %>%
ggplot() +
geom_line(aes(x=date_approved, y=total_loans)) +
scale_x_date(date_breaks = "1 month", date_labels = "%b-%Y")
ppp_maryland_loans_by_date %>%
ggplot() +
geom_line(aes(x=date_approved, y=total_loans)) +
scale_x_date(date_breaks = "1 month", date_labels = "%b-%Y") +
theme(
axis.text.x = element_text(angle = 45,  hjust=1)
)
library(tydyverse)
install.packages("rio")
install.packages("tidyverse")
install.packages("janitor")
install.packages("rio")
install.packages("tidyverse")
install.packages("janitor")
install.packages("tidyverse")
install.packages("rio")
install.packages("tidyverse")
install.packages("janitor")
install.packages("tidyverse")
library(rio)
library(janitor)
library(tidyverse)
install.packages("rio")
install.packages("tidyverse")
install.packages("janitor")
install.packages("tidyverse")
install.packages("janitor")
install.packages("rio")
install.packages("janitor")
read_csv(https://github.com/wellsdata/CompText_Jour/raw/main/data/mob_analysis_data.csv)
read.csv(https://github.com/wellsdata/CompText_Jour/raw/main/data/mob_analysis_data.csv)
read.csv("/Users/ninimtchedlishvili/CompText_Jour-main/data/mob_analysis_data.csv")
MobAnalysisData <- read.csv("/Users/ninimtchedlishvili/CompText_Jour-main/data/mob_analysis_data.csv")
View(MobAnalysisData)
nrow(MobAnalysisData)
nrow(MobAnalysisData)
ncol(MobAnalysisData)
colnames(MobAnalysisData)
data("mob_analysis_data")
View(MobAnalysisData)
str(MobAnalysisData)
head(6)
head(MobAnalysisData)
Top5entries <- MobAnalysisData %>%
count(Year) %>%
group_by(Year) %>%
arrange(desc())
Top5entries <- MobAnalysisData %>%
count(Year) %>%
group_by(Year) %>%
arrange(desc(Year))
Top5entries <- MobAnalysisData %>%
count(Year) %>%
group_by(Year) %>%
arrange(desc(Year))
head(Top5entries)
View(Top5entries)
Top5entries <- MobAnalysisData %>%
count(Year) %>%
group_by(Year) %>%
arrange(desc(Year))
slice_max(n, n=5)
Top5entries <- MobAnalysisData %>%
count(Year) %>%
slice_max(n, n=5)
head(Top5entries)
View(Top5entries)
Keywordentried <- MobAnalysisData %>%
select(keyword) %>%
filter(keyword)
Keywordentried <- MobAnalysisData %>%
select(keyword) %>%
filter(grepl()keyword)
Keywordentried <- MobAnalysisData %>%
select(keyword) %>%
filter()
View(Keywordentried)
Keywordentried <- MobAnalysisData %>%
select(keyword) %>%
filter()
group_by(Keywordentried)
Keywordentried <- MobAnalysisData %>%
select(keyword) %>%
filter()
count(Keywordentried)
group_by(Keywordentried)
View(Keywordentried)
Keywordentried <- MobAnalysisData %>%
select(keyword) %>%
filter()
group_by(Keywordentried)
Keywordentried <- MobAnalysisData %>%
select(keyword) %>%
filter() %>%
group_by(Keywordentried)
Keywordentried <- MobAnalysisData %>%
select(keyword) %>%
group_by(Keywordentried) %>%
filter()
Keywordentried <- MobAnalysisData %>%
select(keyword) %>%
filter()
{r}
Keywordentried <- MobAnalysisData %>%
select(keyword) %>%
filter()
View(Keywordentried)
Keywordentried <- MobAnalysisData %>%
select(keyword) %>%
count(keyword) %>%
filter()
View(Keywordentried)
Keywordentried <- MobAnalysisData %>%
select(keyword) %>%
count(keyword) %>%
filter()
head(Keywordentried)
Top5entries <- MobAnalysisData %>%
count(Year) %>%
slice_max(n, n=5)
head(Top5entries)
{r}
Top5entries <- MobAnalysisData %>%
count(Year) %>%
slice_max(n, n=5)
head(Top5entries)
{r}
Top5entries <- MobAnalysisData %>%
count(Year) %>%
arrange(desc(Year))
head(Top5entries)
View(Top5entries)
Top5entries <- MobAnalysisData %>%
count(Year) %>%
arrange(desc(n))
head(Top5entries)
View(Top5entries)
Top5entries <- MobAnalysisData %>%
count(Year) %>%
slice_max(n, n=5)
head(Top5entries)
View(Top5entries)
Top5entries <- MobAnalysisData %>%
count(Year) %>%
slice_max(n, n=5)
head(Top5entries)
AllYears <- MobAnalysisData %>%
count(Year) %>%
arrange(desc(year))
Top5entries <- MobAnalysisData %>%
count(Year) %>%
slice_max(n, n=5)
head(Top5entries)
{r}
Top5entries <- MobAnalysisData %>%
count(Year) %>%
arrange(desc(n))
slice_max(n, n=5)
Top5entries <- MobAnalysisData %>%
count(Year) %>%
arrange(desc(n))
View(Top5entries)
ggplot(data = Top5entries) +
geom_bar(aes(x=year, y=n, fill=n)
Top5entries %>%
ggplot() +
geom_bar(aes(x=year, y=n, fill=n)
Top5entries %>%
ggplot(Top5entries, aes(x=Year,y=n, fill=n)) +
geom_bar(aes(x=year, y=n, fill=n)
Top5entries %>%
ggplot(aes(x=Year,y=n, fill=n)) +
geom_bar(aes(x=year, y=n, fill=n)
Top5entries %>%
ggplot(aes(x=Year,y=n, fill=n)) +
geom_bar(aes(size=n, color=n)
ggplot(data = Top5entries) +
geom_bar(aes(x=year, y=n, fill=n)
ggplot(data = Top5entries) +
geom_col(aes(x=year, y=n, fill=n)
Top5entries %>%
ggplot(data = Top5entries) +
geom_col(aes(x=year, y=n, fill=n)
Top5entries %>%
ggplot(aes(x=year, y=n, fill=n) +
geom_col()+
Top5entries %>%
ggplot(aes(x=year, y=n, fill=n) +
geom_col()+
labs(title = "Entries by Year", x=Year, y=Number of Entries, fill=Count)+
Top5entries %>%
ggplot(aes(x=year, y=n, fill=n) +
geom_col() +
labs(title = "Entries by Year", x=Year, y=Number of Entries, fill=Count)+
Top5entries %>%
ggplot(aes(x=year, y=n, fill=n) +
geom_col(position = "dodge") +
labs(title = "Entries by Year", x=Year, y=Number of Entries, fill=Count)+
MobAnalysisData %>%
count(Year) %>%
arrange(desc(n)) %>%
ggplot(aes(x=year, y=n, fill=n) +
geom_col(position = "dodge") +
labs(title = "Entries by Year", x=Year, y=Number of Entries, fill=Count)+
ggplot(data = Top5entries) +
geom_col(mapping = aes(x=Year, y=n, fill=n))
ggplot(data = Top5entries) +
geom_col(mapping = aes(x=Year, y=n, fill=n))
labs(title = "Total Entried By Year", subtitle = "Mob Analysis Data", caption = "Graphic By Nini Mtchedlishvili", x = "year", y = "Number of Entries")
ggplot(data = Top5entries) +
geom_col(mapping = aes(x=Year, y=n, fill=n))
geom_col(position = "dodge") +
theme(legend.position = "none")+
labs(title = "Total Entried By Year", subtitle = "Mob Analysis Data", caption = "Graphic By Nini Mtchedlishvili", x = "year", y = "Number of Entries")
ggplot(data = Top5entries) +
geom_col(mapping = aes(x=Year, y=n, fill=n))
geom_col(position = "dodge") +
theme(legend.position = "none")+
labs(title = "Total Entried By Year",
subtitle = "Mob Analysis Data",
caption = "Graphic By Nini Mtchedlishvili",
x = "year",
y = "Number of Entries")
ggplot(data = Top5entries) +
geom_col(mapping = aes(x=Year, y=n, fill=n)) +
geom_col(position = "dodge") +
theme(legend.position = "none")+
labs(title = "Total Entried By Year",
subtitle = "Mob Analysis Data",
caption = "Graphic By Nini Mtchedlishvili",
x = "year",
y = "Number of Entries")
ggplot(data = Top5entries) +
geom_col(mapping = aes(x=Year, y=n, fill=n), position = "dodge") +
theme(legend.position = "none")+
labs(title = "Total Entried By Year",
subtitle = "Mob Analysis Data",
caption = "Graphic By Nini Mtchedlishvili",
x = "year",
y = "Number of Entries")
library(tidyverse)
library(tidytext)
install.packages("tidyverse")
install.packages("tidytext")
install.packages("tidytext")
library(tidytext)
library(tidyverse)
detach("package:tidytext", unload = TRUE)
detach("package:tidyverse", unload = TRUE)
install.packages("tidytext")
install.packages("tidytext")
library(tidyverse)
library(tidytext)
#install.packages("tidytext")
library(tidyverse)
library(tidytext)
text <- c("Because I could not stop for Death -",
"He kindly stopped for me -",
"The Carriage held but just Ourselves -",
"and Immortality")
text
library(dplyr)
text_df <- tibble(line = 1:4, text = text)
text_df
View(text_df)
library(tidytext)
text_df %>%
unnest_tokens(word, text)
library(tidytext)
text_df %>%
unnest_tokens(word, text, strip_punct = FALSE)
library(janeaustenr)
library(dplyr)
library(stringr)
original_books <- austen_books() %>%
group_by(book) %>%
mutate(linenumber = row_number(),
chapter = cumsum(str_detect(text,
regex("^chapter [\\divxlc]",
ignore_case = TRUE)))) %>%
ungroup()
original_books
View(original_books)
library(janeaustenr)
library(dplyr)
library(stringr)
original_books <- austen_books() %>%
group_by(book) %>%
mutate(linenumber = row_number(),
chapter = cumsum(str_detect(text,
regex("^chapter [\\divxlc]",
ignore_case = TRUE)))) %>%
ungroup()
original_books
library(tidytext)
tidy_books <- original_books %>%
unnest_tokens(word, text)
tidy_books
View(tidy_books)
data(stop_words)
tidy_books <- tidy_books %>%
anti_join(stop_words)
View(tidy_books)
tidy_books %>%
count(word, sort = TRUE)
library(ggplot2)
tidy_books %>%
count(word, sort = TRUE) %>%
filter(n > 600) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(n, word)) +
geom_col() +
labs(y = NULL)
install.packages("gutenbergr")
library(gutenbergr)
hgwells <- gutenberg_download(c(35, 36, 5230, 159))
load("data/hgwells.rda")
View(hgwells)
load("assets/data/hgwells.rda")
